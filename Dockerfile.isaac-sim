FROM ubuntu:jammy AS base
LABEL maintainer="Vu-Hoi HUYNH vuhoi.huynh@gmail.com"

# Set environment variables.
ENV DEBIAN_FRONTEND=noninteractive \
    TERM=xterm-256color            \
    STARTUP_DIR=/startup           \
    NOVNC_HOME=/root/noVNC         \
    VNC_COL_DEPTH=24               \
    VNC_RESOLUTION=1920x1080       \
    VNC_VIEW_ONLY=false            \
    SUPERVISOR_LOG_LEVEL=warn

# Set the locale.
RUN    apt-get update                                     \
    && apt-get install -y --no-install-recommends locales \
    && rm -rf /var/lib/apt/lists/*                        \
    && echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen        \
    && locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8  \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# Install common tools.
RUN    apt-get update                             \
    && apt-get install -y --no-install-recommends \
        git                                       \
        vim                                       \
        wget                                      \
        curl                                      \
        unzip                                     \
        net-tools                                 \
        bzip2                                     \
        procps                                    \
        apt-utils                                 \
    && rm -rf /var/lib/apt/lists/*

FROM base AS isaac-sim

RUN    mkdir -p /isaac-sim /isaac-sim-comp-check /tmp \
    && wget --no-check-certificate -P /tmp https://download.isaacsim.omniverse.nvidia.com/isaac-sim-standalone%404.5.0-rc.36%2Brelease.19112.f59b3005.gl.linux-x86_64.release.zip \
    && wget --no-check-certificate -P /tmp https://download.isaacsim.omniverse.nvidia.com/isaac-sim-comp-check%404.5.0-rc.6%2Brelease.675.f1cca148.gl.linux-x86_64.release.zip    \
    && unzip "/tmp/isaac-sim-standalone@4.5.0-rc.36+release.19112.f59b3005.gl.linux-x86_64.release.zip" -d /isaac-sim            \
    && unzip "/tmp/isaac-sim-comp-check@4.5.0-rc.6+release.675.f1cca148.gl.linux-x86_64.release.zip"    -d /isaac-sim-comp-check \
    && /isaac-sim/post_install.sh                     \
    && rm -rf /tmp/isaac-sim-*

RUN    apt-get update                                                        \
    && apt-get install -y --no-install-recommends software-properties-common \
    && wget --no-check-certificate -P / https://download.isaacsim.omniverse.nvidia.com/isaacsim-webrtc-streaming-client-1.0.6-linux-x64.AppImage \
    && chmod +x /isaacsim-webrtc-streaming-client-1.0.6-linux-x64.AppImage   \
    && add-apt-repository -y universe                                        \
    && apt-get install -y --no-install-recommends libfuse2                   \
    && rm -rf /var/lib/apt/lists/*

FROM isaac-sim AS ssh
RUN    apt-get update                             \
    && apt-get install -y --no-install-recommends \
        openssh-server                            \
        vim                                       \
    && mkdir -p /var/run/sshd                     \
    && sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config \
    && rm -rf /var/lib/apt/lists/*

FROM ssh AS xfce
RUN    apt-get update                             \
    && apt-get install -y --no-install-recommends \
        xfce4                                     \
        xfce4-goodies                             \
        dbus-x11                                  \
    && rm -rf /var/lib/apt/lists/*

FROM xfce AS vnc
RUN    apt-get update                             \
    && apt-get install -y --no-install-recommends \
        tigervnc-standalone-server                \
        tigervnc-common                           \
        tigervnc-tools                            \
        tigervnc-xorg-extension                   \
    && rm -rf /var/lib/apt/lists/*

FROM vnc AS novnc
RUN    apt-get update                             \
    && apt-get install -y --no-install-recommends \
        ca-certificates                           \
        python3-numpy                             \
    && git clone -b v1.3.0  --single-branch https://github.com/novnc/noVNC.git      $NOVNC_HOME                  \
    && git clone -b v0.10.0 --single-branch https://github.com/novnc/websockify.git $NOVNC_HOME/utils/websockify \
    && ln -s $NOVNC_HOME/vnc_lite.html $NOVNC_HOME/index.html                                                    \
    && rm -rf /var/lib/apt/lists/*

FROM novnc AS supervisor
RUN    apt-get update \
    && apt-get install -y --no-install-recommends supervisor \
    && rm -rf /var/lib/apt/lists/*

FROM supervisor AS final

# Add config/script files into the image.
ADD ./rootfs/ /

# Set permissions to the startup scripts.
RUN for var in ${STARTUP_DIR}; do                                                            \
      find "$var"/ -name '*.sh' -exec chmod a+x {} +;                                        \
      chgrp -R 0 "$var" && chmod -R a+rw "$var" && find "$var" -type d -exec chmod a+x {} +; \
    done

EXPOSE 22 $VNC_PORT $NOVNC_PORT

ENTRYPOINT ["sh", "-c", "$STARTUP_DIR/entrypoint.sh"]

# TODO: Parameterize the architecture version (e.g., jammy, focal, etc.)
# TODO: Parameterize the base image (e.g., ubuntu, debian, alpine, etc.)
